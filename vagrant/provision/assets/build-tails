#!/bin/sh

set -e

TMPFS_SIZE_GB=6.0
TMPFS_SIZE_BYTES=$(echo "($TMPFS_SIZE_GB * 1024^3)/1" | bc) # rounded down

as_root_do() {
	sudo \
		${RSYNC_PROXY:+RSYNC_PROXY="$RSYNC_PROXY"} \
		${http_proxy:+http_proxy="$http_proxy"} \
		${https_proxy:+https_proxy="$https_proxy"} \
		${ftp_proxy:+ftp_proxy="$ftp_proxy"} \
		${no_proxy:+no_proxy="$no_proxy"} \
		${MKSQUASHFS_OPTIONS:+MKSQUASHFS_OPTIONS="$MKSQUASHFS_OPTIONS"} \
		"$@"
}

usable_memory() {
	free -b | awk '/cache:/ { print $4 }'
}

if [ "$TAILS_RAM_BUILD" ]; then
	if [ "$(usable_memory)" -lt "$TMPFS_SIZE_BYTES" ]; then
		echo "Not enough memory available for an in-memory build. Aborting." >&2
		exit 1
	fi
fi

REV="${1:-$(git --git-dir=/amnesia.git name-rev --name-only HEAD)}"
COMMIT="$(git --git-dir=/amnesia.git rev-parse --verify "$REV")"

test -d /home/vagrant/amnesia || git clone /amnesia.git /home/vagrant/amnesia

cd /home/vagrant/amnesia

git fetch origin
as_root_do git checkout --force "$REV"
as_root_do git reset --hard "$COMMIT"

if [ "$TAILS_CLEAN_BUILD" ]; then
	as_root_do lb clean --all
fi
as_root_do ./build-wiki

BUILD_DIR=$(mktemp -d /home/vagrant/tails-build.XXXXXXXX)
if [ "$TAILS_RAM_BUILD" ]; then
	TMPFS_DIR=$(mktemp -d /home/vagrant/tmpfs.XXXXXXXX)
	trap "cd / ; sudo umount '$BUILD_DIR' '$TMPFS_DIR' ; sudo rmdir '$BUILD_DIR' '$TMPFS_DIR'" EXIT
	as_root_do mount -t tmpfs -o "noatime,size=${TMPFS_SIZE_BYTES},mode=0770,uid=root,gid=vagrant" tmpfs "$TMPFS_DIR"
	as_root_do mount -t aufs -o "noatime,noxino,dirs=$TMPFS_DIR=rw:/home/vagrant/amnesia/=rr+wh" aufs "$BUILD_DIR"
else
	trap "cd / ; sudo rm -rf '$BUILD_DIR'" EXIT
	as_root_do rsync -a /home/vagrant/amnesia/ "$BUILD_DIR"/
fi

cd "$BUILD_DIR"
as_root_do lb config
as_root_do lb build

mv -f tails-* /vagrant
